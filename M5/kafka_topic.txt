Topic
â€”-----

head -n 10 run-kafka_server.sh
./run-kafka_server.sh -s start

$kafka-topics.sh : Create, delete, describe, or change a topic.
1) Create a topic
So, the first thing you want to do is kafka-topics, and we need to reference zookeeper,
and the reason we need to reference zookeeper is that, to create a topic, we have to 
point to zookeeper.
On third CLI give following command
>>>>$kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --create
Missing required argument "[partitions]"

2) Yes indeed, when we create a topic, we have to say how many partitions we want.
we are going to want three partitions
>>>>$kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --create --partitions 3
Missing required argument "[replication-factor]"

3) So that's right, as well. When we create a topic, as I said, we have to specify 
the number of partitions, but also the number of replication-factor.
So set the replication factor to 2.
>>>>$kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --create  --partitions 3 --replication-factor 2
WARNING: Due to limitations in metric names, topics with a period ('.') or underscore ('_') could collide. To avoid issues it is best to use either, but not both.
Error while executing topic command : Replication factor: 2 larger than available brokers: 1.
[2024-06-29 09:21:41,087] ERROR org.apache.kafka.common.errors.InvalidReplicationFactorException: Replication factor: 2 larger than available brokers: 1.

We get an error, it says, 
"Error while executing topic command, the Replication 
factor, two, is larger than the number of available brokers, one."

So here is something that is in kafka, in kafka, you cannot create the topic with a 
replication factor greater than the number of brokers you have, and because 
we have started only one broker, in our cluster, we cannot have a replication factor 
of two.

Now later, we'll see how to start a cluster, and then we can create topics
with a higher replication factor, but for now, we have to use a replication factor 
of one to create that topic.

>>>>$kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --create 
    --partitions 3 --replication-factor 1
WARNING: Due to limitations in metric names, topics with a period ('.') or underscore ('_') could collide. To avoid issues it is best to use either, but not both.
Created topic first_topic.


4) List the topics
SO how do we know that our topic has been created?
Well, give the following command to list the kafka topics

>>>>$kafka-topics.sh --zookeeper 127.0.0.1:2181 --list
5) Describe the topic 
Okay, so now if we want to learn more about the topic, we want to know how many 
partitions there is, we want to know where they're assigned, etc...
give the following command to list the kafka topics
>>>>$kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --describe

6) Exercise
------------
Create a new topic, having name as second_topic, having six partitions, and then 
the replication factor, which is going to be one.

List all the topics to confirm the creation of the above topic.
To delete the topic of kafka
$kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic second_topic --delete